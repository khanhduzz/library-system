@model LoginViewModel

<div class="container mt-5">
    <div class="row justify-content-center">
        <div class="col-md-6">
            <div class="card shadow-sm">
                <div class="card-header text-center">
                    <h4>Login</h4>
                </div>
                <div class="card-body">
                    <form asp-action="Login" method="post">
                        <div class="mb-3">
                            <label asp-for="Username" class="form-label"></label>
                            <input asp-for="Username" class="form-control @(ViewData.ModelState["Username"]?.Errors.Any() == true ? "is-invalid" : "")" />
                            <span asp-validation-for="Username" class="invalid-feedback"></span>
                        </div>
                        <div class="mb-3">
                            <label asp-for="Password" class="form-label"></label>
                            <input asp-for="Password" type="password" class="form-control @(ViewData.ModelState["Password"]?.Errors.Any() == true ? "is-invalid" : "")" />
                            <span asp-validation-for="Password" class="invalid-feedback"></span>
                        </div>
                        <button type="submit" class="btn btn-primary w-100">Login</button>
                    </form>
                    @if (!ViewData.ModelState.IsValid)
                    {
                        <div class="mt-3">
                            @foreach (var error in ViewData.ModelState.Values.SelectMany(v => v.Errors))
                            {
                                <div class="alert alert-danger mb-1">@error.ErrorMessage</div>
                            }
                        </div>
                    }
                </div>
            </div>
        </div>
    </div>
</div>

@section Scripts {
    <partial name="_ValidationScriptsPartial" />
}
