@model LibrarySystem.Models.BookDetailsViewModel

@{
    ViewData["Title"] = "Book Details";
}

<div class="container mt-4 p-4 rounded shadow-sm" style="background-color: #f8f9fa;">
    <h1 class="mb-4">Book Details</h1>

    <div class="row" style="min-height: 400px;">
        <!-- Left Side: Book Info -->
        <div class="col-md-7 d-flex flex-column justify-content-between">
            <div>
                <dl class="row">
                    <dt class="col-sm-4">
                        @Html.DisplayNameFor(model => model.Book.Title)
                    </dt>
                    <dd class="col-sm-8">
                        @Html.DisplayFor(model => model.Book.Title)
                    </dd>

                    <dt class="col-sm-4">
                        @Html.DisplayNameFor(model => model.Book.Description)
                    </dt>
                    <dd class="col-sm-8">
                        @Html.DisplayFor(model => model.Book.Description)
                    </dd>

                    <dt class="col-sm-4">
                        Author
                    </dt>
                    <dd class="col-sm-8">
                        @Model.Book.Author?.Name
                    </dd>

                    <dt class="col-sm-4">
                        Genres
                    </dt>
                    <dd class="col-sm-8">
                        @if (Model.Book.BookGenres.Any())
                        {
                            @foreach (var genre in Model.Book.BookGenres)
                            {
                                <span>@genre.Genre.Name</span>
                                @if (!ReferenceEquals(genre, Model.Book.BookGenres.Last()))
                                {
                                    <span>, </span> <!-- Add comma if it's not the last genre -->
                                }
                            }
                        }
                        else
                        {
                            <span class="text-muted">No genres available</span>
                        }
                    </dd>

                    <dt class="col-sm-4">
                        @Html.DisplayNameFor(model => model.Book.ISBN)
                    </dt>
                    <dd class="col-sm-8">
                        @Html.DisplayFor(model => model.Book.ISBN)
                    </dd>

                    <dt class="col-sm-4">
                        @Html.DisplayNameFor(model => model.Book.PublishDate)
                    </dt>
                    <dd class="col-sm-8">
                        @Model.Book.PublishDate?.ToString("yyyy-MM-dd")
                    </dd>

                    @* <dt class="col-sm-4">
                        Available for Rent
                    </dt>
                    <dd class="col-sm-8">
                        @(Model.Book.IsAvailable ? "Yes" : "No")
                    </dd>

                    <dt class="col-sm-4">
                        @Html.DisplayNameFor(model => model.Book.Condition)
                    </dt>
                    <dd class="col-sm-8">
                        @Model.Book.Condition.ToString()
                    </dd>

                    <dt class="col-sm-4">
                        Borrow Count
                    </dt>
                    <dd class="col-sm-8">
                        @Model.Book.BorrowCount
                    </dd> *@
                </dl>
            </div>

            <!-- Buttons at the very bottom -->
            <div class="d-flex gap-2 pt-3">
                <a asp-action="Edit" asp-route-id="@Model?.Book.Id" class="btn btn-primary">Edit</a>
                @if (User.Identity.IsAuthenticated)
                {
                    @* @if (Model.IsBorrowedByUser)
                    {
                        <form method="post" asp-action="Return" asp-controller="Books">
                            <input type="hidden" name="bookId" value="@Model.Book.Id" />
                            <button type="submit" class="btn btn-warning">Return</button>
                        </form>
                    }
                    else if (Model.Book.IsAvailable)
                    {
                        <form method="post" asp-action="Borrow" asp-controller="Books">
                            <input type="hidden" name="bookId" value="@Model.Book.Id" />
                            <button type="submit" class="btn btn-danger">Borrow</button>
                        </form>
                    }
                    else
                    {
                        <span class="text-muted">Not available</span>
                    } *@
                }
                <a asp-action="Index" class="btn btn-secondary">Back to List</a>
            </div>
        </div>

        <!-- Right Side: Image Display -->
        <div class="col-md-5 d-flex align-items-center justify-content-center">
            @if (Model.Book.Image != null)
            {
                <img src="data:image/jpeg;base64,@Convert.ToBase64String(Model.Book.Image)"
                     class="rounded shadow img-fluid"
                     style="height: 400px; width: auto;" />
            }
            else
            {
                <p class="text-muted">No image available</p>
            }
        </div>
    </div>
</div>
