@model LibrarySystem.Models.Author

@{
    ViewData["Title"] = "Edit Author";
}

<div class="container mt-4 p-4 rounded shadow-sm" style="background-color: #f8f9fa;">
    <h1 class="mb-4">Edit Author</h1>

    <form asp-action="Edit" enctype="multipart/form-data">
        <div asp-validation-summary="ModelOnly" class="text-danger mb-3"></div>
        <input type="hidden" asp-for="Id" />

        <div class="row" style="min-height: 400px;">
            <!-- Left Side: Form Fields -->
            <div class="col-md-7 d-flex flex-column justify-content-between">
                <div>
                    <div class="mb-3">
                        <label asp-for="Name" class="form-label fw-bold">Name</label>
                        <input asp-for="Name" class="form-control" placeholder="Enter author's name" />
                        <span asp-validation-for="Name" class="text-danger"></span>
                    </div>

                    <div class="mb-3">
                        <label asp-for="Description" class="form-label fw-bold">Description</label>
                        <textarea asp-for="Description" class="form-control" placeholder="Enter author's description" rows="4"></textarea>
                        <span asp-validation-for="Description" class="text-danger"></span>
                    </div>

                    <div class="mb-3">
                        <label class="form-label fw-bold">Change Image (optional):</label>
                        <input type="file" name="ImageFile" class="form-control" id="ImageFileInput" onchange="previewImage(event)" />
                    </div>
                </div>

                <!-- Buttons at the bottom -->
                <div class="d-flex gap-2 pt-3">
                    <button type="submit" class="btn btn-primary">Save</button>
                    <a asp-action="Index" class="btn btn-secondary">Back to List</a>
                </div>
            </div>

            <!-- Right Side: Image Display -->
            <div class="col-md-5 d-flex align-items-center justify-content-center">
                @if (Model.Image != null)
                {
                    <img id="ImagePreview" src="data:image/jpeg;base64,@Convert.ToBase64String(Model.Image)"
                         class="rounded shadow img-fluid"
                         style="max-height: 400px; width: auto;" />
                }
                else
                {
                    <p id="NoImageText" class="text-muted">No image available</p>
                }

                <!-- Image Preview (hidden initially) -->
                <img id="ImagePreview" class="rounded shadow img-fluid" style="height: 400px; width: auto; display: none;" />
                <p id="NoImageText" class="text-muted" style="display: none;">No image selected</p>
            </div>
        </div>
    </form>
</div>

@section Scripts {
    @{
        await Html.RenderPartialAsync("_ValidationScriptsPartial");
    }
}

<script>
    // Function to preview the uploaded image
    function previewImage(event) {
        const file = event.target.files[0];
        const preview = document.getElementById('ImagePreview');
        const noImageText = document.getElementById('NoImageText');

        // If a new file is selected, show the preview and hide "No image" text
        if (file) {
            const reader = new FileReader();
            reader.onload = function(e) {
                preview.src = e.target.result;
                preview.style.display = 'block'; // Show the image preview
                noImageText.style.display = 'none'; // Hide the "No image" text
            }
            reader.readAsDataURL(file);
        } else {
            // If no file is selected, hide the preview and show the fallback text
            preview.style.display = 'none'; // Hide the image preview if no file is selected
            noImageText.style.display = 'block'; // Show the "No image" text
        }
    }

    // On page load, if there is no image selected and an existing image is present, show it
    window.onload = function() {
        const preview = document.getElementById('ImagePreview');
        const noImageText = document.getElementById('NoImageText');
        const imageFileInput = document.getElementById('ImageFileInput');

        // Check if there's an image already assigned to the author model (on page load)
        if (preview.src !== "" && preview.src !== null && preview.src.includes('data:image')) {
            // Hide the "No image available" text if an image exists
            noImageText.style.display = 'none';
        } else {
            // Show the fallback "No image available" text if there's no image preview
            noImageText.style.display = 'block';
        }
    }
</script>
